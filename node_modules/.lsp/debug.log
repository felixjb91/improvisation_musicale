Hello - from c:\Users\Lixfe\.vscode\extensions\jaredly.reason-vscode-1.5.2\bin.native.exe.hot.exe
Previous log location: C:\Users\Lixfe\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","languageId":"ocaml","version":1,"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":97,"character":24},"end":{"line":97,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":109,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":114,"character":31},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":113,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml","languageId":"ocaml","version":1,"text":"open Functions\r\n\r\n(* Test Scores MIDI Number *)\r\nlet ode_to_the_joy = [71; 71; 72; 74; 74; 72; 71; 69; 67; 67; 69; 71; 71; 69; 69; 71; 71; 72; 74; 74; 72; 71; 69; 67; 67; 69; 71; 69; 67; 67; 69; 69; 71; 67; 69; 71; 72; 71; 67; 69; 71; 72; 71; 69; 67; 69; 62; 71; 71; 72; 74; 74; 72; 71; 69; 67; 67; 69; 71; 69; 67; 67]\r\n\r\nlet game_of_thrones = [67; 60; 63; 65; 67; 60; 63; 65; 67; 60; 63; 65; 62; 65; 58; 63; 62; 65; 58; 63; 62; 60; 67; 60; 63; 65; 67; 60; 63; 65; 67; 60; 63; 65; 62; 65; 58; 63; 62; 65; 58; 63; 62; 60]\r\n\r\nlet it_crowd = [60; 60; 60; 67; 63; 63; 63; 70; 67; 67; 67; 74; 70; 70; 70; 67; 60; 60; 60; 67; 63; 63; 63; 70; 67; 67; 67; 74; 75; 75;75; 67; 60; 60; 60; 67; 63; 63; 63; 70; 67; 67; 67; 74; 70; 70; 70; 67; 60; 60; 56; 56; 63; 63; 60; 60; 67; 67; 63; 63; 60; 60; 63; 63]\r\n\r\n(* Test Scores Frequency *)\r\nlet ode_to_the_joy_freq = midi_to_freq_score ode_to_the_joy\r\nlet game_of_thrones_freq = midi_to_freq_score game_of_thrones\r\nlet it_crowd_freq = midi_to_freq_score it_crowd\r\n\r\nlet _ =\r\n  begin\r\n    Graphics.open_graph \" 400x600\";\r\n    Graphics.set_window_title \"Improvisation Musicale\";\r\n    List.iter (fun x -> Graphics.sound x 500) ode_to_the_joy_freq;\r\n    Graphics.read_key ();\r\n  end"}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 9, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":7,"character":102}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":3,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","languageId":"ocaml","version":1,"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score"}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 15, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 18, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":3,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 24, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":4,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":12,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":4,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 29, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":2,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 32, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 34, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":6,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 36, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 38, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 40, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":3,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 41, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":2,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 42, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 43, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 44, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.340938568115ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 45, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 46, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":17,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 47, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":15,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 49, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 50, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 51, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 52, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 56, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 58, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 59, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":34,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 60, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 61, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 62, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 63, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":7,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 64, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 65, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 66, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 67, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"position":{"line":7,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 68, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 69, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":70,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 70, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 71, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":72,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 72, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":29,"character":34},"end":{"line":29,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 73, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":2},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n  "}]}}
Read message 
{"jsonrpc":"2.0","id":74,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 74, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 75, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":2},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n  "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":2}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 76, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 77, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":3},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n  "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 78, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 79, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":3},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n  "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":3}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":80,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 80, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 81, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 82, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":83,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 83, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":84,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 84, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 85, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}
Read message 
{"jsonrpc":"2.0","id":86,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 86, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 87, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}
Read message 
{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 88, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":89,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":28,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 89, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":4},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":90,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 90, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 91, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":4},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":4}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":5},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n()"}]}}
Read message 
{"jsonrpc":"2.0","id":92,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":1}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 92, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":93,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 93, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":1},"end":{"line":31,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 94, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 95, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":6},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(*)"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":96,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 96, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":97,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 97, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}
Read message 
{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 98, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":6},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(*)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":6}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":99,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 99, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":100,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":7},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* )"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":101,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 101, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":3},"end":{"line":31,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 103, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":8},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":8}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":104,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":4},"end":{"line":31,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 104, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":105,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 105, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 106, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":8},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":8}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":107,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 107, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 108, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":3},"end":{"line":31,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 109, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 110, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 112, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":113,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":17}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":29,"character":13},"end":{"line":29,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 114, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":29,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 115, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}
Read message 
{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 116, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}
Read message 
{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":2},"end":{"line":31,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 118, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":9},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(*  *)"}]}}
Read message 
{"jsonrpc":"2.0","id":119,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 119, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":9},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(*  *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":9}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 121, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 123, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 124, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":14},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* trans *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":15},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transp *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":17},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpos *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":18},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)"}]}}
Read message 
{"jsonrpc":"2.0","id":126,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 126, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":12},"end":{"line":31,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 128, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":18},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":18}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":129,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 129, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":130,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 130, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":15},"end":{"line":31,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":19},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":132,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 132, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":19},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":19}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":134,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 134, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 135, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 136, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":137,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 137, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 138, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":139,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":24,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 139, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":139}}
Read message 
{"jsonrpc":"2.0","id":140,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":31,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 140, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":20},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nL"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":141,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 141, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":23},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nLET "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":142,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 142, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":143,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":27},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":142}}
Read message 
{"jsonrpc":"2.0","id":144,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 144, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":28},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nl"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":146,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 146, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":31},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":147,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 147, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 148, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":31},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":31}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":149,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 149, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 150, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":32},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet t"}]}}
Read message 
{"jsonrpc":"2.0","id":151,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 151, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":33},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet tr"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":152,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 152, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":6},"end":{"line":32,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 153, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":154,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":33},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet tr"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":33}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":155,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 155, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 156, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":35},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet tran"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":36},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet trans"}]}}
Read message 
{"jsonrpc":"2.0","id":157,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 157, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":9},"end":{"line":32,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 158, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 159, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":36},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet trans"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":36}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":160,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 160, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 161, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":38},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpo"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":40},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose"}]}}
Read message 
{"jsonrpc":"2.0","id":162,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 162, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":164,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 164, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":40},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":40}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":165,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 165, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 166, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":41},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":167,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 167, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 168, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":41},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":41}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":169,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 169, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 170, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":171,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":18,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 171, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":171}}
Read message 
{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 172, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":173,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 173, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":34},"end":{"line":114,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.390291213989ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 174, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 175, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":29,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 176, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":176}}
Read message 
{"jsonrpc":"2.0","id":177,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":33,"character":34},"end":{"line":33,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 177, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":114,"character":6},"end":{"line":114,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 178, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":179,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":112,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":180,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":105,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 180, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 181, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":182,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 182, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 183, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 184, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":31,"character":3},"end":{"line":31,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":187,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 187, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":186}}
Read message 
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":13},"end":{"line":32,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 188, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":42},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose "}]}}
Read message 
{"jsonrpc":"2.0","id":189,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 189, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":190,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 190, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":42},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":42}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":191,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 191, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 192, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":43},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose s"}]}}
Read message 
{"jsonrpc":"2.0","id":193,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 193, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":15},"end":{"line":32,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 194, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":195,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 195, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":44},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose sc"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":46},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose scor"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":47},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score"}]}}
Read message 
{"jsonrpc":"2.0","id":196,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 196, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":197,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":19},"end":{"line":32,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":198,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 198, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":47},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":47}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":199,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 199, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 200, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":50},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":201,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 201, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":50},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":50}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":51},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = \r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":203,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 203, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":204,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 204, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":51},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":51}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":205,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 205, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":206,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.291109085083ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 206, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":52},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = \r\n  "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":207,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 207, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":208,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 208, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":52},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score = \r\n  "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":52}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 209, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 210, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":211,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 211, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":212,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 212, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":213,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":19}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 213, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":214,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":19},"end":{"line":32,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":53},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score  = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":215,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 215, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 216, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":53},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score  = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":53}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":217,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 217, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":218,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 218, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":55},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score in = \r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":219,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":32,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 219, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":57},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score inte = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":58},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score inter = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":60},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score interva = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":220,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 220, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":27},"end":{"line":32,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 221, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":60},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score interva = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":60}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":62},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervall = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":63},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":223,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 223, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":32,"character":30},"end":{"line":32,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 224, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":225,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 225, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":63},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":63}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":226,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 226, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 227, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":64},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":228,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 228, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":229,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 229, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":64},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":64}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":230,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 230, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 231, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":65},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  t"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":232,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 232, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":67},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  tra"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":233,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 233, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":5},"end":{"line":33,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":235,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 235, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":69},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  t"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":233}}
Read message 
{"jsonrpc":"2.0","id":236,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 236, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 237, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":234}}
Read message 
{"jsonrpc":"2.0","id":238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":70},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  "}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":236}}
Read message 
{"jsonrpc":"2.0","id":239,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 239, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":237}}
Read message 
{"jsonrpc":"2.0","id":240,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":70},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":70}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":241,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 241, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":242,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 242, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":243,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":25,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 243, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":243}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":71},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  L"}]}}
Read message 
{"jsonrpc":"2.0","id":244,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 244, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":245,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 245, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":246,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.198364257813ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 246, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":247,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 247, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":74},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":248,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 248, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":6},"end":{"line":33,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 249, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":246}}
Read message 
{"jsonrpc":"2.0","id":250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 250, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":74},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":74}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":75},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List."}]}}
Read message 
{"jsonrpc":"2.0","id":251,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":7},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 251, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":252,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 252, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 253, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":254,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 254, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":76},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.m"}]}}
Read message 
{"jsonrpc":"2.0","id":255,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":8},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 255, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":256,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 256, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":257,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":8},"end":{"line":33,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 257, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":258,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 258, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":77},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.ma"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":77}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":9},"end":{"line":33,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 259, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":260,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 260, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":261,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 261, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":78},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":260}}
Read message 
{"jsonrpc":"2.0","id":262,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 262, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":263,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":10},"end":{"line":33,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 263, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 264, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":78},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":78}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":265,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 265, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":266,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 266, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":24,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 267, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":79},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map "}]}}
Read message 
{"jsonrpc":"2.0","id":268,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 268, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":269,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 269, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":79},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map "}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":79}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":270,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 270, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":271,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 271, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":80},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map s"}]}}
Read message 
{"jsonrpc":"2.0","id":272,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 272, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":273,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 273, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":274,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 274, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":275,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 275, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":83},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map scor"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":276,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 276, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":277,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 277, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":274}}
Read message 
{"jsonrpc":"2.0","id":278,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 278, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":84},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":276}}
Read message 
{"jsonrpc":"2.0","id":279,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 279, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":280,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 280, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":277}}
Read message 
{"jsonrpc":"2.0","id":281,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 281, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":282,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 282, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":84},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":84}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":283,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 283, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":284,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 284, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 285, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":286,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":11},"end":{"line":33,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 286, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":86},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map ()score"}]}}
Read message 
{"jsonrpc":"2.0","id":287,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":13}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 287, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":288,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 288, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 289, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":290,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 290, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":86},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map ()score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":86}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":291,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 291, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":292,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 292, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":293,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 293, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 294, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":13},"end":{"line":33,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 295, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":87},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map () score"}]}}
Read message 
{"jsonrpc":"2.0","id":296,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 296, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 297, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":298,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 298, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 299, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":297}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":87},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map () score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":87}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":300,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 300, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":301,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 301, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":88},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (f) score"}]}}
Read message 
{"jsonrpc":"2.0","id":302,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 302, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":89},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fu) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":90},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun) score"}]}}
Read message 
{"jsonrpc":"2.0","id":303,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 303, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":304,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 304, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 305, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":90},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":90}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":306,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 306, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":307,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 307, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":93},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map () score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":308,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 308, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":309,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 309, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 310, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":93},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map () score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":93}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":311,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 311, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":312,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 312, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":94},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (l) score"}]}}
Read message 
{"jsonrpc":"2.0","id":313,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.375986099243ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 313, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":96},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":314,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 314, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":315,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 315, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 316, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":96},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":96}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":317,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 317, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":318,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 318, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":97},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let_) score"}]}}
Read message 
{"jsonrpc":"2.0","id":319,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 319, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":320,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 320, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":16},"end":{"line":33,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 321, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":322,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 322, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":97},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let_) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":97}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":323,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 323, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":324,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 324, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":98},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let_=) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":325,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 325, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":326,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":17},"end":{"line":33,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 326, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":327,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 327, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":100},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":325}}
Read message 
{"jsonrpc":"2.0","id":328,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 328, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":329,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":15},"end":{"line":33,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 329, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":326}}
Read message 
{"jsonrpc":"2.0","id":330,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 330, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":103},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let _ ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":328}}
Read message 
{"jsonrpc":"2.0","id":331,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 331, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 332, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":329}}
Read message 
{"jsonrpc":"2.0","id":333,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 333, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":104},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let _ =) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":331}}
Read message 
{"jsonrpc":"2.0","id":334,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 334, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":335,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":19},"end":{"line":33,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 335, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":332}}
Read message 
{"jsonrpc":"2.0","id":336,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 336, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":105},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let _ =\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":334}}
Read message 
{"jsonrpc":"2.0","id":337,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 337, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":338,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 338, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":335}}
Read message 
{"jsonrpc":"2.0","id":339,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 339, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":105},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (let _ =\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":105}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":340,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 340, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":341,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 341, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":342,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":19},"end":{"line":33,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 342, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":343,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 343, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":343}}
Read message 
{"jsonrpc":"2.0","id":344,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 344, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":345,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 345, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":346,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 346, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":106},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ =\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":347,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 347, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 348, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":349,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 349, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":106},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ =\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":106}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":350,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 350, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":351,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 351, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":352,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":11},"end":{"line":34,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 352, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":107},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":353,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 353, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":354,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 354, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":107},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":107}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":355,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 355, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":356,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 356, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":357,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 357, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":357}}
Read message 
{"jsonrpc":"2.0","id":358,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 358, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":108},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map ( \r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":359,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 359, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":360,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 360, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":108},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map ( \r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":108}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":361,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 361, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 362, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":109},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ = \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":363,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 363, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":364,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 364, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":365,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 365, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":109},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":109}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":110},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    \r\n    let _ = \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":366,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 366, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":367,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 367, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":110},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    \r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":110}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":368,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 368, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":369,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 369, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":111},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    f\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":370,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 370, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":112},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fu\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":113},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":371,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 371, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":372,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":7},"end":{"line":34,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 372, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":373,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 373, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":113},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":113}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":115},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun -\r\n    let _ = \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":374,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 374, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":9},"end":{"line":34,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 375, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":376,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 376, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":116},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun ->\r\n    let _ = \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":374}}
Read message 
{"jsonrpc":"2.0","id":377,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 377, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":378,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":10},"end":{"line":34,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 378, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":375}}
Read message 
{"jsonrpc":"2.0","id":379,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 379, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":116},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun ->\r\n    let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":116}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":380,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 380, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":381,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 381, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":382,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 382, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":382}}
Read message 
{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 383, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":384,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 384, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":383}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":384}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":117},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":385,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 385, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":386,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":6},"end":{"line":35,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 386, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":387,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 387, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":388,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 388, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":388}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":117},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":117}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":389,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 389, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":389}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":390,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 390, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":391,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 391, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":392,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 392, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":393,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 393, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":393}}
Read message 
{"jsonrpc":"2.0","id":394,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 394, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":395,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":8},"end":{"line":34,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 395, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":119},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun x ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":396,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 396, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":397,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":10},"end":{"line":34,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 397, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":398,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 398, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":119},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun x ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":119}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":399,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 399, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":400,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 400, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":401,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 401, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":402,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 402, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":403,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":9},"end":{"line":34,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 403, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":120},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun  ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":404,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 404, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":405,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 405, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":121},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun n ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":121}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":406,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":9},"end":{"line":34,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 406, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":122},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun no ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":407,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 407, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":408,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":10},"end":{"line":34,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 408, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":409,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 409, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":124},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":410,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 410, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":411,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":12},"end":{"line":34,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 411, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":412,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 412, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":124},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let _ = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":124}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":413,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 413, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":414,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 414, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":415,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 415, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":416,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 416, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":416}}
Read message 
{"jsonrpc":"2.0","id":417,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":13},"end":{"line":35,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 417, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":125},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let _ =  \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":418,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 418, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":419,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 419, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":125},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let _ =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":125}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":420,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 420, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":421,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.430583953857ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 421, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":422,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 422, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":423,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 423, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":424,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":12},"end":{"line":35,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 424, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":425,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 425, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":426,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":11},"end":{"line":35,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 426, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":126},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let  =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":427,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 427, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":428,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 428, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":126},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let  =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":126}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":429,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 429, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":430,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 430, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":127},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let n =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":431,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 431, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":432,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 432, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":433,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":11},"end":{"line":35,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 433, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":434,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 434, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":128},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let no =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":435,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 435, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":436,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":12},"end":{"line":35,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 436, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":433}}
Read message 
{"jsonrpc":"2.0","id":437,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 437, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":130},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let note =  \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":435}}
Read message 
{"jsonrpc":"2.0","id":438,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 438, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":439,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":14},"end":{"line":35,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 439, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":436}}
Read message 
{"jsonrpc":"2.0","id":440,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 440, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":131},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteM =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":438}}
Read message 
{"jsonrpc":"2.0","id":441,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 441, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":442,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":15},"end":{"line":35,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 442, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":439}}
Read message 
{"jsonrpc":"2.0","id":443,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 443, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":132},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMi =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":444,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 444, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":134},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":445,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 445, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":446,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":18},"end":{"line":35,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 446, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":447,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 447, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":134},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":134}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":448,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 448, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":449,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 449, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":450,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 450, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":451,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 451, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":451}}
Read message 
{"jsonrpc":"2.0","id":452,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 452, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":452}}
Read message 
{"jsonrpc":"2.0","id":453,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 453, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":453}}
Read message 
{"jsonrpc":"2.0","id":454,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 454, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":454}}
Read message 
{"jsonrpc":"2.0","id":455,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 455, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":456,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 456, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":457,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":114,"character":6},"end":{"line":114,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 457, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":458,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 458, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":459,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":113,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 459, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":459}}
Read message 
{"jsonrpc":"2.0","id":460,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":113,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 460, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":461,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":113,"character":12},"end":{"line":113,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 461, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":462,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 462, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":462}}
Read message 
{"jsonrpc":"2.0","id":463,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 463, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":464,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 464, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":464}}
Read message 
{"jsonrpc":"2.0","id":465,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 465, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":465}}
Read message 
{"jsonrpc":"2.0","id":466,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 466, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":467,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.39529800415ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 467, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":468,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 468, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":469,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 469, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":470,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 470, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":471,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 471, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":472,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":27,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 472, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":473,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":27,"character":12}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 473, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":135},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":474,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 474, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":475,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":31},"end":{"line":35,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 475, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":476,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 476, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":135},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":135}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":136},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":477,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 477, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":478,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 478, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":136},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":136}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":479,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 479, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":480,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00953674316406ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 480, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":137},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi n\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":481,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":33},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 481, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":138},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi no\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":482,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 482, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":483,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":34},"end":{"line":35,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 483, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":484,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 484, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":140},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":482}}
Read message 
{"jsonrpc":"2.0","id":485,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 485, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":486,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":36},"end":{"line":35,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 486, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":483}}
Read message 
{"jsonrpc":"2.0","id":487,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 487, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":140},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":140}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":488,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 488, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":489,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 489, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":141},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":490,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 490, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":491,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 491, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":142},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note i\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":492,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 492, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":143},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":493,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 493, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":494,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":39},"end":{"line":35,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 494, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":495,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 495, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":144},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note intervalle\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":493}}
Read message 
{"jsonrpc":"2.0","id":496,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 496, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":497,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":47},"end":{"line":35,"character":47}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 497, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":494}}
Read message 
{"jsonrpc":"2.0","id":498,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 498, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":144},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note intervalle\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":144}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":150},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note inte\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":499,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 499, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":500,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":41},"end":{"line":35,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 500, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":501,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 501, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":152},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":499}}
Read message 
{"jsonrpc":"2.0","id":502,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 502, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":503,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":39},"end":{"line":35,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 503, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":500}}
Read message 
{"jsonrpc":"2.0","id":504,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 504, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":153},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":502}}
Read message 
{"jsonrpc":"2.0","id":505,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 505, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":503}}
Read message 
{"jsonrpc":"2.0","id":506,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 506, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":153},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":153}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":507,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 507, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":508,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 508, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":154},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      l\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":509,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 509, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":156},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":510,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 510, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":511,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":9},"end":{"line":36,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 511, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":512,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 512, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":156},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":156}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":513,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 513, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":514,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 514, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":157},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":515,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 515, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":516,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 516, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":157},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":157}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":517,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 517, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":518,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 518, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":160},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      l\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":519,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 519, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":520,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":7},"end":{"line":36,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 520, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":521,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 521, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":161},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":519}}
Read message 
{"jsonrpc":"2.0","id":522,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 522, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":520}}
Read message 
{"jsonrpc":"2.0","id":523,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 523, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":161},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":161}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":524,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 524, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":525,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 525, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":162},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      l\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":526,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 526, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":163},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      le\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":165},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":527,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 527, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":528,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 528, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":165},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":165}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":529,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 529, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":530,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 530, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":166},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let n\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":531,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 531, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":167},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let ne\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":532,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 532, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":533,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":12},"end":{"line":36,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 533, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":534,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 534, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":168},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let new\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":532}}
Read message 
{"jsonrpc":"2.0","id":535,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 535, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":536,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":13},"end":{"line":36,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 536, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":533}}
Read message 
{"jsonrpc":"2.0","id":537,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 537, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":168},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let new\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":168}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":538,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 538, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":539,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 539, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":169},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newn\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":540,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 540, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":541,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 541, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":542,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":14},"end":{"line":36,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 542, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":543,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 543, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":170},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newno\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":544,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 544, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":545,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":15},"end":{"line":36,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 545, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":542}}
Read message 
{"jsonrpc":"2.0","id":546,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 546, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":171},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnot\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":547,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 547, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":172},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnote\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":544}}
Read message 
{"jsonrpc":"2.0","id":548,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 548, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":549,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":17},"end":{"line":36,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 549, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":545}}
Read message 
{"jsonrpc":"2.0","id":550,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 550, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":173},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteM\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":551,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 551, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":552,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 552, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":553,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":18},"end":{"line":36,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 553, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":554,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 554, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":174},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMi\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":555,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 555, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":176},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":556,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 556, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":557,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":21},"end":{"line":36,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 557, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":558,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 558, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":176},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":176}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":179},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":559,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 559, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":560,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 560, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":179},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":179}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":561,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 561, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":562,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 562, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":181},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = no\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":563,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":26},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 563, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":182},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = not\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":564,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 564, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":565,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 565, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":566,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 566, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":183},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = note\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":564}}
Read message 
{"jsonrpc":"2.0","id":567,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 567, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":568,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":28},"end":{"line":36,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 568, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":565}}
Read message 
{"jsonrpc":"2.0","id":569,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 569, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":183},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = note\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":183}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":184},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteM\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":570,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 570, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":571,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":29},"end":{"line":36,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 571, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":572,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 572, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":185},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":185}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":573,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":32},"end":{"line":36,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 573, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":574,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 574, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":575,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 575, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":186},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":576,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 576, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":577,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 577, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":187},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi +\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":576}}
Read message 
{"jsonrpc":"2.0","id":578,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 578, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":579,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":34},"end":{"line":36,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 579, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":580,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 580, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":188},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":578}}
Read message 
{"jsonrpc":"2.0","id":581,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 581, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":579}}
Read message 
{"jsonrpc":"2.0","id":582,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 582, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":188},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":188}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":583,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 583, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":584,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 584, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":189},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + i\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":585,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":36},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 585, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":190},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + in\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":192},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + inte\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":193},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + inter\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":586,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 586, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":587,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":40},"end":{"line":36,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 587, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":588,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 588, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":194},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + interv\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":589,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 589, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":590,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":41},"end":{"line":36,"character":41}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 590, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":591,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 591, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":195},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":592,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 592, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":593,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":45},"end":{"line":36,"character":45}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 593, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":590}}
Read message 
{"jsonrpc":"2.0","id":594,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 594, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":195},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":195}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":595,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 595, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":596,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 596, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":197},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle i\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":597,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0510215759277ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 597, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":198},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":598,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 598, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":599,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":48}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 599, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":600,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 600, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":199},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle intervalle\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":598}}
Read message 
{"jsonrpc":"2.0","id":601,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 601, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":602,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":56},"end":{"line":36,"character":56}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 602, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":599}}
Read message 
{"jsonrpc":"2.0","id":603,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 603, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":199},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle intervalle\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":199}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":207},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":604,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 604, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":605,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":48}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 605, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":606,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 606, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":208},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      \r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":604}}
Read message 
{"jsonrpc":"2.0","id":607,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 607, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":605}}
Read message 
{"jsonrpc":"2.0","id":608,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 608, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":208},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      \r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":208}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":609,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 609, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":610,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 610, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":611,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 611, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":612,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 612, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":613,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 613, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":614,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 614, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":615,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 615, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":616,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":15},"end":{"line":67,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 616, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":617,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":47}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 617, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":618,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":47}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 618, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":619,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":37}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 619, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":620,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":85},"end":{"line":70,"character":85}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 620, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":621,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 621, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":622,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":25}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 622, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":623,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":25},"end":{"line":69,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 623, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":2},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":624,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.05452537537ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 624, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":625,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 625, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":2},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":2}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":3},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n()\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":626,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":1}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 626, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":627,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":1},"end":{"line":69,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 627, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":628,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 628, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":629,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 629, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":3},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n()\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":3}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":4},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":5},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(** *))\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":630,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 630, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":631,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 631, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":632,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 632, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":6},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(***))\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":6}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":633,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 633, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":634,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 634, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":7},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(**))\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":635,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 635, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":636,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 636, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":8},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(**)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":635}}
Read message 
{"jsonrpc":"2.0","id":637,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 637, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":638,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 638, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":8},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(**)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":8}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":639,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 639, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":640,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 640, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":641,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 641, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":9},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":642,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 642, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":643,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 643, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":644,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 644, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":9},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":9}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":645,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 645, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":646,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 646, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":10},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* R*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":647,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 647, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":648,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":4},"end":{"line":69,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 648, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":649,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 649, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":11},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Re*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":650,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 650, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":651,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":5},"end":{"line":69,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 651, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":652,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 652, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":12},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Ret*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":13},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Reto*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":16},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":653,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 653, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":654,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":10},"end":{"line":69,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 654, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":655,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 655, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":16},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":16}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":656,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 656, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":657,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.375986099243ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 657, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":19},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":658,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 658, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":659,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":13},"end":{"line":69,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 659, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":660,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 660, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":19},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":19}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":661,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 661, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":662,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 662, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":21},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la no*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":663,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 663, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":664,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":15},"end":{"line":69,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 664, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":665,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 665, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":22},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la not*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":663}}
Read message 
{"jsonrpc":"2.0","id":666,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 666, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":667,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":16},"end":{"line":69,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 667, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":664}}
Read message 
{"jsonrpc":"2.0","id":668,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 668, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":23},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":24},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":669,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 669, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":670,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":18},"end":{"line":69,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 670, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":671,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 671, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":24},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":24}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":672,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 672, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":673,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 673, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":25},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":674,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 674, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":26},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":675,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 675, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":27},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'u*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":30},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":676,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 676, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":677,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":24},"end":{"line":69,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 677, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":678,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 678, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":31},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une v*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":31}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":32},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une va*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":679,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 679, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":680,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":26},"end":{"line":69,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 680, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":681,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 681, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":33},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une val*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":37},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":682,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 682, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":683,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":31},"end":{"line":69,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 683, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":684,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 684, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":39},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur mi*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":41},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":685,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 685, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":686,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":35},"end":{"line":69,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 686, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":687,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 687, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":41},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi*)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":41}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":688,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 688, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":689,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 689, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":42},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":690,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 690, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":691,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":36},"end":{"line":69,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 691, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":692,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 692, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":693,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 693, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":42},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi *)\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":42}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":693}}
Read message 
{"jsonrpc":"2.0","id":694,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 694, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":695,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 695, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":696,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 696, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":697,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":38},"end":{"line":69,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 697, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":43},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi *)\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":698,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 698, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":699,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 699, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":43},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur midi *)\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":43}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":700,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 700, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":701,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 701, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":702,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 702, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":702}}
Read message 
{"jsonrpc":"2.0","id":703,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 703, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":704,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":25}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 704, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":703}}
Read message 
{"jsonrpc":"2.0","id":705,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":63,"character":23},"end":{"line":63,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 705, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":706,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":34}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 706, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":707,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":31},"end":{"line":69,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 707, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":44},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":708,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 708, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":709,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":35},"end":{"line":69,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 709, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":710,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 710, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":44},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":44}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":711,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 711, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":712,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 712, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":45},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nl\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":713,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 713, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":46},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nle\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":48},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":714,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 714, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":715,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 715, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":48},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":48}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":716,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 716, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":717,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 717, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":49},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet m\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":718,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 718, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":719,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 719, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":720,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":5},"end":{"line":70,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 720, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":721,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 721, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":52},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":722,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 722, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":723,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":8},"end":{"line":70,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 723, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":720}}
Read message 
{"jsonrpc":"2.0","id":724,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 724, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":53},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":722}}
Read message 
{"jsonrpc":"2.0","id":725,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 725, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":726,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":9},"end":{"line":70,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 726, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":723}}
Read message 
{"jsonrpc":"2.0","id":727,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 727, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":53},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":53}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":728,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 728, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":729,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 729, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":54},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":730,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 730, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":731,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":10},"end":{"line":70,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 731, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":732,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 732, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":55},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2no\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":733,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 733, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":56},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2not\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":734,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 734, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":735,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":12},"end":{"line":70,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 735, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":736,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 736, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":57},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":737,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 737, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":738,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 738, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":739,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":13},"end":{"line":70,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 739, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":740,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 740, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":57},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":57}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":741,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 741, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":742,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 742, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":743,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":25}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 743, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":58},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":744,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 744, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":745,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 745, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":59},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note m\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":62},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":746,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.36470794678ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 746, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":747,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":18},"end":{"line":70,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 747, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":748,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 748, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":62},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":62}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":749,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 749, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":750,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 750, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":65},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":751,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 751, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":752,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 752, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":65},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":65}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":753,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 753, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":754,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 754, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":66},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":755,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 755, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":756,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 756, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":66},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":66}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":757,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 757, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":758,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 758, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":67},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":759,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 759, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":760,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 760, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":67},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":67}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":761,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 761, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":762,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 762, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":763,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 763, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":68},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  l\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":764,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 764, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":70},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":765,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 765, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":766,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":5},"end":{"line":71,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 766, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":767,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 767, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":71},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":71}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":768,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 768, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":769,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 769, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":71},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":71}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":770,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 770, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":771,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 771, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":72},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let r\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":772,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 772, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":73},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let re\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":773,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 773, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":774,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":8},"end":{"line":71,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 774, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":775,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 775, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":74},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":773}}
Read message 
{"jsonrpc":"2.0","id":776,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 776, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":777,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":9},"end":{"line":71,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 777, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":774}}
Read message 
{"jsonrpc":"2.0","id":778,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 778, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":75},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":779,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 779, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":780,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 780, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":781,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":10},"end":{"line":71,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 781, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":782,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 782, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":78},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":780}}
Read message 
{"jsonrpc":"2.0","id":783,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 783, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":781}}
Read message 
{"jsonrpc":"2.0","id":784,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 784, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":78},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":78}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":785,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 785, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":786,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 786, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":79},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = m\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":787,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 787, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":788,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 788, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":789,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":14},"end":{"line":71,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 789, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":790,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 790, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":82},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":791,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 791, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":792,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":17},"end":{"line":71,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 792, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":789}}
Read message 
{"jsonrpc":"2.0","id":793,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 793, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":83},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":791}}
Read message 
{"jsonrpc":"2.0","id":794,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 794, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":792}}
Read message 
{"jsonrpc":"2.0","id":795,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 795, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":84},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":794}}
Read message 
{"jsonrpc":"2.0","id":796,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 796, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":797,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":19},"end":{"line":71,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 797, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":798,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 798, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":84},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":84}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":799,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 799, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":800,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 800, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":85},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":801,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 801, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":802,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":20},"end":{"line":71,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 802, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":803,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 803, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":85},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":85}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":86},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -24\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":804,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 804, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":805,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":21},"end":{"line":71,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 805, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":806,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 806, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":86},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi -24\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":86}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":807,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 807, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":808,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 808, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":809,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":20}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 809, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":87},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":810,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 810, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":811,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 811, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":812,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 812, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":813,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":21},"end":{"line":71,"character":21}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 813, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":814,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":22},"end":{"line":71,"character":22}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 814, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":87},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":87}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":815,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 815, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":816,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 816, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":88},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":817,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 817, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":818,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 818, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":89},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 i\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":819,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":24},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 819, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":90},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":820,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 820, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":821,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":25},"end":{"line":71,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 821, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":822,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 822, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":90},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":90}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":91},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 int\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":823,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 823, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":824,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":26},"end":{"line":71,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 824, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":825,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 825, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":92},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":823}}
Read message 
{"jsonrpc":"2.0","id":826,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 826, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":827,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":25},"end":{"line":71,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 827, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":824}}
Read message 
{"jsonrpc":"2.0","id":828,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 828, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":93},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":826}}
Read message 
{"jsonrpc":"2.0","id":829,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 829, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":827}}
Read message 
{"jsonrpc":"2.0","id":830,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 830, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":93},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":93}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":831,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 831, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":832,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 832, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":94},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  l\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":833,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 833, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":96},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":834,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 834, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":835,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 835, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":836,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 836, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":97},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":97}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":837,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 837, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":838,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 838, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":98},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let r\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":839,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 839, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":99},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let re\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":100},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":840,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 840, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":841,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":9},"end":{"line":72,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 841, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":842,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 842, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":101},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":843,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 843, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":844,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":10},"end":{"line":72,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 844, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":841}}
Read message 
{"jsonrpc":"2.0","id":845,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 845, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":101},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":101}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":846,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 846, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":847,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 847, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":102},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2 \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":848,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 848, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":849,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 849, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":103},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2 =\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":848}}
Read message 
{"jsonrpc":"2.0","id":850,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 850, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":851,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":12},"end":{"line":72,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 851, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":852,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 852, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":104},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":850}}
Read message 
{"jsonrpc":"2.0","id":853,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 853, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":851}}
Read message 
{"jsonrpc":"2.0","id":854,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 854, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":104},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res1 = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":104}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":855,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 855, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":856,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 856, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":857,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 857, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":858,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 858, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":858}}
Read message 
{"jsonrpc":"2.0","id":859,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 859, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":860,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 860, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":861,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":10},"end":{"line":71,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 861, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":105},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":862,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 862, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":863,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":9},"end":{"line":71,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 863, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":864,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 864, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":105},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let res = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":105}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":865,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 865, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":866,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 866, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":867,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 867, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":868,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 868, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":869,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 869, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":870,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 870, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":871,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 871, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":872,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 872, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":873,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 873, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":874,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 874, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":875,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 875, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":876,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 876, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":877,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":6},"end":{"line":71,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 877, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":106},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let o = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":878,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 878, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":107},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let oc = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":110},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octav = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":879,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 879, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":880,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 880, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":881,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 881, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":110},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octav = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":110}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":111},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":882,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 882, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":883,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 883, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":884,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":12},"end":{"line":71,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 884, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":111},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":111}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":885,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 885, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":886,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 886, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":887,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 887, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":888,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 888, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":888}}
Read message 
{"jsonrpc":"2.0","id":889,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 889, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":889}}
Read message 
{"jsonrpc":"2.0","id":890,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 890, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":890}}
Read message 
{"jsonrpc":"2.0","id":891,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 891, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":892,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 892, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":893,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":15},"end":{"line":71,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 893, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":112},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":894,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":16}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 894, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":895,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 895, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":896,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":16},"end":{"line":71,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 896, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":897,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 897, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":112},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":112}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":898,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 898, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":899,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 899, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":900,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 900, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":901,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 901, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":902,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":25}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 902, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":901}}
Read message 
{"jsonrpc":"2.0","id":903,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":25},"end":{"line":71,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 903, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":113},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":904,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 904, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":905,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":26},"end":{"line":71,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 905, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":906,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 906, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":114},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24)  in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":904}}
Read message 
{"jsonrpc":"2.0","id":907,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 907, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":905}}
Read message 
{"jsonrpc":"2.0","id":908,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 908, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":115},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":907}}
Read message 
{"jsonrpc":"2.0","id":909,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 909, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":910,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":28},"end":{"line":71,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 910, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":911,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 911, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":116},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) /1 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":117},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) /12 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":912,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 912, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":913,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":30},"end":{"line":71,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 913, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":914,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 914, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":117},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) /12 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":117}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":915,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 915, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":916,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 916, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":917,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":29}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 917, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":918,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":29},"end":{"line":71,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 918, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":118},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) /v12 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":919,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 919, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":920,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":29},"end":{"line":71,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 920, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":921,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 921, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":120},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":922,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 922, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":923,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":29},"end":{"line":71,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 923, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":924,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 924, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":120},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let res2 = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":120}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":925,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 925, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":926,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 926, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":927,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 927, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":928,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 928, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":929,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":6},"end":{"line":72,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 929, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":121},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let n = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":930,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 930, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":931,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 931, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":932,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":7},"end":{"line":72,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 932, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":933,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 933, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":122},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let nu = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":934,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 934, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":935,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":8},"end":{"line":72,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 935, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":932}}
Read message 
{"jsonrpc":"2.0","id":936,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 936, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":123},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let num = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":934}}
Read message 
{"jsonrpc":"2.0","id":937,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 937, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":938,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":9},"end":{"line":72,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 938, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":935}}
Read message 
{"jsonrpc":"2.0","id":939,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 939, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":123},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let num = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":123}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":940,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 940, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":941,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 941, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":124},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numn = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":125},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numno = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":942,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 942, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":943,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":11},"end":{"line":72,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 943, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":944,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 944, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":127},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numnote = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":945,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 945, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":946,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":13},"end":{"line":72,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 946, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":943}}
Read message 
{"jsonrpc":"2.0","id":947,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 947, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":127},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numnote = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":127}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":948,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 948, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":949,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 949, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":950,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 950, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":951,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":9},"end":{"line":72,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 951, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":952,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":10},"end":{"line":72,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 952, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":128},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numote = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":953,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 953, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":954,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":9},"end":{"line":72,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 954, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":955,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 955, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":129},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":956,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 956, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":957,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":10},"end":{"line":72,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 957, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":954}}
Read message 
{"jsonrpc":"2.0","id":958,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 958, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":959,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 959, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":129},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":129}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":960,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 960, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":961,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 961, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":962,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":14},"end":{"line":72,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 962, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":963,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":15},"end":{"line":72,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 963, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":962}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":130},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote =  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":964,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 964, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":965,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 965, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":130},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote =  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":130}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":966,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 966, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":967,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 967, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":968,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 968, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":969,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 969, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":970,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 970, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":131},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = m \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":971,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 971, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":132},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = mi \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":134},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":972,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 972, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":973,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":20},"end":{"line":72,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 973, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":974,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 974, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":134},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":134}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":975,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 975, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":976,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 976, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":135},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":977,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 977, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":978,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 978, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":135},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":135}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":979,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 979, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":980,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 980, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":137},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi -  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":981,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 981, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":982,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 982, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":137},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi -  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":137}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":138},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - () \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":983,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":24}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 983, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":984,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 984, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":985,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":24},"end":{"line":72,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 985, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":986,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 986, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":138},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - () \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":138}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":987,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 987, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":988,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 988, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":140},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":989,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 989, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":990,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":26},"end":{"line":72,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 990, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":991,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 991, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":140},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":140}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":992,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 992, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":993,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 993, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":141},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":994,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 994, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":995,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":27},"end":{"line":72,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 995, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":996,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 996, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":141},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":141}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":997,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 997, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":998,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 998, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":142},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+o) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":999,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":28},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 999, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":143},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+oc) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":145},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+octa) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":147},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+octave) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1000,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1000, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1001,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":33},"end":{"line":72,"character":33}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1001, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1002,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1002, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1003,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":32}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1003, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1004,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":32},"end":{"line":72,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1004, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":147},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24+octave) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":147}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1005,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1005, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1006,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1006, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1007,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":27},"end":{"line":72,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1007, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1008,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1008, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1009,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":26},"end":{"line":72,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1009, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":148},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 +octave) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1010,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1010, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1011,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1011, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1012,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1012, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1013,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":28},"end":{"line":72,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1013, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":149},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1014,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":30}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1014, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1015,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1015, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1016,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1016, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":149},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":149}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1017,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":34},"end":{"line":72,"character":34}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1017, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1018,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1018, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1019,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1019, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1020,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":35},"end":{"line":72,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1020, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1021,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":36},"end":{"line":72,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1021, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1022,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":35}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1022, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1023,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":35},"end":{"line":72,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1023, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":150},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave*) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1024,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1024, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1025,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":36},"end":{"line":72,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1025, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1026,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1026, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":150},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave*) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":150}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1027,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1027, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1028,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1028, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1029,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":35}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1029, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1030,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":35},"end":{"line":72,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1030, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":151},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave *) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1031,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1031, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1032,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":36},"end":{"line":72,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1032, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1033,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1033, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1034,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":37},"end":{"line":72,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1034, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":152},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * ) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1035,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1035, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1036,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":38},"end":{"line":72,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1036, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1037,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1037, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":152},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * ) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":152}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1038,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1038, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1039,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1039, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":153},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 1) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1040,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1040, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1041,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":39},"end":{"line":72,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1041, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":154},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1042,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1042, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1040}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1043,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1043, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1044,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":40},"end":{"line":72,"character":40}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1044, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1041}}
Read message 
{"jsonrpc":"2.0","id":1045,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1045, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":154},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":154}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1046,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1046, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1047,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1047, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":155},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) i\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1048,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":43},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1048, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":156},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1049,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1049, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1050,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":44},"end":{"line":72,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1050, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1051,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1051, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1052,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":0},"end":{"line":73,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1052, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1050}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":156},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":156}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":157},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1053,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1053, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1054,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":0},"end":{"line":74,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1054, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1055,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1055, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":157},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":157}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1056,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1056, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1057,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1057, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":158},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n²\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1058,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1058, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1059,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1059, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1060,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":1},"end":{"line":73,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1060, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1061,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1061, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":159},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":159}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":160},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1062,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1062, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1063,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1063, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":160},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":160}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1064,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1064, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1065,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1065, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1066,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1066, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1066}}
Read message 
{"jsonrpc":"2.0","id":1067,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":62,"character":0}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1067, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1068,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":61,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1068, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1069,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1069, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":161},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\nc\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1070,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":52,"character":1},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1070, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1071,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1071, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1072,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":52,"character":1},"end":{"line":52,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1072, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1073,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1073, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":161},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\nc\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":161}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1074,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1074, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1075,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1075, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":162},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1076,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1076, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1077,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":52,"character":0},"end":{"line":61,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1077, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1078,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1078, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":162},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":162}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1079,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1079, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1080,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1080, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1081,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":59,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1081, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1081}}
Read message 
{"jsonrpc":"2.0","id":1082,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":61,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1082, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1083,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":61,"character":12},"end":{"line":61,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1083, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":163},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n  \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1084,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1084, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1085,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1085, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":163},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n  \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":163}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":164},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n  \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1086,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1086, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1087,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1087, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":165},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1086}}
Read message 
{"jsonrpc":"2.0","id":1088,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1088, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1089,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1089, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":166},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1088}}
Read message 
{"jsonrpc":"2.0","id":1090,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1090, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1091,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":12},"end":{"line":72,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1091, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1092,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1092, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":166},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":166}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1093,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1093, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1094,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1094, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1095,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1095, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1095}}
Read message 
{"jsonrpc":"2.0","id":1096,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1096, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1096}}
Read message 
{"jsonrpc":"2.0","id":1097,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1097, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1097}}
Read message 
{"jsonrpc":"2.0","id":1098,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1098, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1098}}
Read message 
{"jsonrpc":"2.0","id":1099,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1099, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1101,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":9},"end":{"line":66,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1101, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":7},"end":{"line":66,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":3},"end":{"line":66,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1103, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1104,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1104, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":9},"end":{"line":66,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1105, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":171},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  |  0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1106,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1106, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1107, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":171},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  |  0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":171}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1108,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1108, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1109, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":172},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1110,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1110, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1111,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1112,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1112, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":5},"end":{"line":66,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1114,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1114, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":172},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":172}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1115,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1115, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1116,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1116, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":9},"end":{"line":67,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1118, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":177},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |  2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1119,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.422239303589ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1119, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":178},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1121, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":3},"end":{"line":67,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1123, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1124,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1124, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1125,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":4},"end":{"line":68,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":178},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":178}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1126,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1126, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":5},"end":{"line":68,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1128, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1125}}
Read message 
{"jsonrpc":"2.0","id":1129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":4},"end":{"line":68,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1129, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1128}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":179},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | i -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":183},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  |  4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1130,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1130, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":184},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1132,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1132, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1134,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1134, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1135,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":4},"end":{"line":69,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1135, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":184},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":184}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1136,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1136, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1137,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1137, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":185},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | a -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1138,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1138, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1139,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1139, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":189},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  |  5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1138}}
Read message 
{"jsonrpc":"2.0","id":1140,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1140, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1141,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1141, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":190},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1140}}
Read message 
{"jsonrpc":"2.0","id":1142,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1142, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1143,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1144,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1144, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1145,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":4},"end":{"line":70,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":190},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":190}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1146,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1146, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1147, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":191},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | ol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1148,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1148, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1149, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":196},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  |  7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1148}}
Read message 
{"jsonrpc":"2.0","id":1150,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1150, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1151,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1151, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":197},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1150}}
Read message 
{"jsonrpc":"2.0","id":1152,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1152, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1153, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1154,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":5},"end":{"line":70,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1155, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":197},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":197}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1156,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1156, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1157,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1157, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1158,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1158, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":4},"end":{"line":71,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1159, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":202},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  |  9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1160,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1160, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1161, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":203},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1162,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1162, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1164,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1164, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":4},"end":{"line":72,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1165, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":203},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":203}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1166,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1166, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":204},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | i -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1167, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1168,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1168, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1169, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":209},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1170,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1170, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1171, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":209},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":209}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1172,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1172, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1173, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1174,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1174, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":5},"end":{"line":66,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1175, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":210},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  \r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1176,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1176, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1177, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":210},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  \r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":210}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1178,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1178, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":211},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1180,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1180, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":3},"end":{"line":67,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1181, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1182, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":211},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":211}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1183,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1183, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1184, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1185,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":3},"end":{"line":68,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1187,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1187, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1188, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1189,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1189, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1190,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":4},"end":{"line":68,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1190, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":5},"end":{"line":68,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1191, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":212},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n  \r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1192,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1192, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1193,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1193, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":3},"end":{"line":70,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1194, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":212},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n  \r\n  | 4\r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":212}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1195,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1195, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1196,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1196, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":5},"end":{"line":70,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1198, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":213},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4\r\n  \r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1199,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1199, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1200, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1201, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1202,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":3},"end":{"line":72,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1203,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1203, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":213},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4\r\n  \r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":213}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1204,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1204, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1205,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1205, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1206,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1206, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1207, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":4},"end":{"line":72,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1208, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":214},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4\r\n \r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1209, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1210, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":215},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1211,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1211, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":5},"end":{"line":70,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1212, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1213, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1214,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":5},"end":{"line":71,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.363111495972ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1215, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":215},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":215}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1216,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1216, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1217, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":216},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n  \r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1218,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1218, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1219, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1220,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1220, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":216},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n  \r\n  | 7\r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":216}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1221,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1221, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1223,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1223, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":5},"end":{"line":73,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1224, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":217},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n  \r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1225,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1225, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1226, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":2},"end":{"line":75,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1227, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1228,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":75,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1228, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":217},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n  \r\n  | 9\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":217}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1229,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1229, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1230, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":5},"end":{"line":75,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1231, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":218},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n  \r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1232,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1232, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1233,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1233, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":218},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  |\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n  \r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":218}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":2},"end":{"line":75,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1235,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1235, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1236,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1236, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1237,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":3},"end":{"line":67,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1237, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1238,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":3},"end":{"line":67,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":219},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | \r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1239,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1239, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1240,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":219},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | \r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":219}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":220},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1241,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1241, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1242, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1243, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1244,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1244, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":220},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":220}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1245,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1245, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1246,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1246, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":221},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  \r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1247,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1247, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1248, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":221},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  \r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":221}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1249,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1249, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1250, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":222},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1251,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1251, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1252, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1253,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1253, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1254,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":3},"end":{"line":70,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1254, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1252}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":222},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":222}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1255,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1255, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.430345535278ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1256, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":223},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n-\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1257,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1257, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1258,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1258, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1259,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":1},"end":{"line":72,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1259, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":224},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1257}}
Read message 
{"jsonrpc":"2.0","id":1260,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1260, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1259}}
Read message 
{"jsonrpc":"2.0","id":1261,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1261, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":225},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":225}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":1},"end":{"line":72,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1262, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1263,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1263, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1264, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":225},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":225}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1265,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1265, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1266,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1266, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":226},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1267,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1267, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1268,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":1},"end":{"line":74,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1268, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1269,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1269, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1268}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":226},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":226}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1270,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1270, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1271,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1271, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":227},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n|\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1272,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.393629074097ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1272, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":1},"end":{"line":76,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1273, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1274,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1274, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1275,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":0},"end":{"line":76,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1275, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1273}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":227},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n|\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":227}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1276,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1276, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1277,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1277, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":228},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1278,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.315189361572ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1278, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":1},"end":{"line":76,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1279, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1280,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1280, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":229},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n|\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1278}}
Read message 
{"jsonrpc":"2.0","id":1281,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1281, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":0},"end":{"line":76,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1282, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1279}}
Read message 
{"jsonrpc":"2.0","id":1283,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1283, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":230},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1281}}
Read message 
{"jsonrpc":"2.0","id":1284,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1284, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1285, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1282}}
Read message 
{"jsonrpc":"2.0","id":1286,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1286, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1285}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":230},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n|\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":230}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1287,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1287, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1288,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":1},"end":{"line":74,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1288, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1289,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1289, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":0},"end":{"line":74,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1290, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1288}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":231},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1291,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1291, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":2},"end":{"line":74,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1292, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1293,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1293, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1294,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":1},"end":{"line":72,"character":1}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1294, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1292}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":231},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n|\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":231}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":232},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1295,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1295, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1296,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1296, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1297,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1297, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":232},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":232}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1296}}
Read message 
{"jsonrpc":"2.0","id":1298,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1298, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1299, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1300,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1300, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":233},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |3\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1301,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1301, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":4},"end":{"line":69,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1302, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1303,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1303, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":233},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  |3\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":233}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1304,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.993728637695ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1304, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1305, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1306,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1306, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1307,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":3},"end":{"line":69,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1307, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":234},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1308,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1308, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1309,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":4},"end":{"line":69,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1309, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1310, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1311,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1311, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1312,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1312, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1313,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1313, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":234},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  |\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":234}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":3},"end":{"line":72,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1314, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1315,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1315, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1316, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":235},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | \r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1317,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1317, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1318,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1318, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":235},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | \r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":235}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":236},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | -\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1319,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1319, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1320,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1320, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1321,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1321, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":237},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | \r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1319}}
Read message 
{"jsonrpc":"2.0","id":1322,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1322, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1320}}
Read message 
{"jsonrpc":"2.0","id":1323,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1323, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":238},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | -\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1322}}
Read message 
{"jsonrpc":"2.0","id":1324,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1324, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1325, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1326,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1326, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1327,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1327, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1328,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":5},"end":{"line":73,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1328, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":239},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | -\r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":239}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1329,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1329, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1330,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.34236907959ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1330, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":239},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | -\r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":239}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1331,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1331, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1332,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1332, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1333,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":4},"end":{"line":72,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1333, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1334,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1334, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":240},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | \r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1335,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1335, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1336,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1336, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":240},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | \r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":240}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1337,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1337, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1338,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1338, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":241},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1339,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1339, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1340,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1340, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":241},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | \r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":241}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1341,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1341, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1342,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1342, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":242},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1343,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1343, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1344,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":5},"end":{"line":73,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1344, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1345,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1345, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1346,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":3},"end":{"line":74,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1346, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1344}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":242},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  |\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":242}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1347,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1347, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1348,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1348, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":243},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | \r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1349,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1349, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1350,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1350, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":244},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1349}}
Read message 
{"jsonrpc":"2.0","id":1351,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1351, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1352,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":5},"end":{"line":74,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1352, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1353,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1353, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1354,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":75,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1354, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1355,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":5},"end":{"line":75,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1355, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1352}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1354}}
Read message 
{"jsonrpc":"2.0","id":1356,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":3},"end":{"line":76,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1356, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":244},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  |\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":244}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1357,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1357, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1358,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1358, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":246},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 1\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1359,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1359, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1360,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":5},"end":{"line":76,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1360, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1361,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1361, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":247},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1359}}
Read message 
{"jsonrpc":"2.0","id":1362,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1362, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1363,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":6},"end":{"line":76,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1363, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1360}}
Read message 
{"jsonrpc":"2.0","id":1364,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1364, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":247},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":247}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1365,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1365, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1366,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1366, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1367,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":60,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1367, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1367}}
Read message 
{"jsonrpc":"2.0","id":1368,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1368, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1368}}
Read message 
{"jsonrpc":"2.0","id":1369,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1369, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":5},"end":{"line":66,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1370, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":249},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 6\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1371,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1371, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1372,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":7},"end":{"line":66,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1372, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1373,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1373, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":249},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 6\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":249}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":250},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 6>\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1374,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1374, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":8},"end":{"line":66,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1375, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1376,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1376, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":252},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 \r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1374}}
Read message 
{"jsonrpc":"2.0","id":1377,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1377, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1375}}
Read message 
{"jsonrpc":"2.0","id":1378,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1378, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":253},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 -\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1377}}
Read message 
{"jsonrpc":"2.0","id":1379,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1379, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":7},"end":{"line":66,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1380, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1381,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1381, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":254},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1379}}
Read message 
{"jsonrpc":"2.0","id":1382,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1382, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1383,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":8},"end":{"line":66,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1383, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1380}}
Read message 
{"jsonrpc":"2.0","id":1384,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1384, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":254},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":254}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1385,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1385, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1386,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1386, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1387,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":6},"end":{"line":66,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1387, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1388,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1388, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1389,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1389, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1390,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1390, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":255},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1->\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1391,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1391, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1392,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":7},"end":{"line":67,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1392, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1393,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1393, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1394,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":6},"end":{"line":67,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1394, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1392}}
Read message 
{"jsonrpc":"2.0","id":1395,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1395, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":255},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1->\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":255}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1396,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1396, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":256},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 ->\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1397,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1397, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1398,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":6},"end":{"line":67,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1398, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1399,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1399, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1400,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1400, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":256},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 ->\r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":256}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1400}}
Read message 
{"jsonrpc":"2.0","id":1401,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1401, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1402,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1402, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1403,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1403, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1404,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":8},"end":{"line":67,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1404, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1405,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1405, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1406,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1406, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1407,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1407, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1408,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1408, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1409,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":8},"end":{"line":67,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1409, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":257},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1410,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1410, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1411,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1411, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":257},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":257}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1412,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1412, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1413,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1413, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1414,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":6},"end":{"line":67,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1414, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1415,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1415, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1416,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1416, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1417,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1417, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":258},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1418,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1418, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1419,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1419, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":259},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n   -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1418}}
Read message 
{"jsonrpc":"2.0","id":1420,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1420, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1421,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1421, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":259},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n   -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":259}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":260},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1422,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1422, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1423,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1423, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":260},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":260}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1424,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1424, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1425,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1425, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1426,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1426, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1427,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":5},"end":{"line":67,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1427, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":261},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1428,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1428, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1429,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1429, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":261},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":261}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1430,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1430, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1431,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1431, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":262},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1432,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1432, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1433,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1433, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":263},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n   -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1432}}
Read message 
{"jsonrpc":"2.0","id":1434,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1434, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1435,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.998258590698ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1435, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":263},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n   -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":263}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1436,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1436, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1437,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1437, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":264},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1438,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1438, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1439,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1439, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":265},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1438}}
Read message 
{"jsonrpc":"2.0","id":1440,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1440, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1441,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1441, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1442,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1442, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1443,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":5},"end":{"line":68,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1443, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":265},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2\r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":265}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":266},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3\r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1444,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1444, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1445,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1445, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1446,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1446, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1447,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":5},"end":{"line":69,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1447, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":267},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1448,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1448, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1449,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1449, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":268},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5\r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1450,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1450, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1451,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1451, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1452,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1452, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1453,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":5},"end":{"line":71,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1453, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":269},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6\r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1454,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1454, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1455,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1455, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1456,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1456, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1457,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":5},"end":{"line":72,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1457, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":270},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7\r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1458,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1458, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1459,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1459, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1460,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1460, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1461,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":5},"end":{"line":73,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1461, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":271},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8\r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1462,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1462, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1463,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1463, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1464,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1464, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1465,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":5},"end":{"line":74,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.407934188843ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1465, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":272},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1466,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1466, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1467,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1467, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":273},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1468,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1468, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1469,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1469, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":273},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9\r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":273}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1470,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":75,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1470, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1471,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1471, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1472,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1472, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1473,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":5},"end":{"line":75,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1473, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1470}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":274},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9 -> \r\n  | 10\r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1474,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1474, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1473}}
Read message 
{"jsonrpc":"2.0","id":1475,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1475, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1476,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1476, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1477,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":6},"end":{"line":76,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1477, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1476}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":275},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1478,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":77,"character":6}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1478, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1479,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1479, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1480,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1480, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1481,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":77,"character":6},"end":{"line":77,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1481, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":276},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1482,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1482, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1483,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1483, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":276},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":276}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1484,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1484, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1485,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1485, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1486,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1486, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":279},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 ->  \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1487,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1487, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1488,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1488, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":280},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1489,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1489, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1490,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1490, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":280},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4  -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":280}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1491,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1491, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1492,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1492, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1493,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":8},"end":{"line":69,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1493, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1494,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":8},"end":{"line":70,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1494, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1495,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":7},"end":{"line":70,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1495, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":281},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1496,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1496, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1497,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":6},"end":{"line":70,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1497, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1498,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1498, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":281},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 ->\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":281}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1499,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1499, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1500,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1500, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1501,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":8},"end":{"line":66,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1501, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":282},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1502,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1502, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1503,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1503, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":282},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":282}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1504,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1504, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1505,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1505, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1506,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1506, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1507,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1507, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1508,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1508, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1509,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1509, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1510,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1510, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1511,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":14}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1511, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1512,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1512, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1513,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1513, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1513}}
Read message 
{"jsonrpc":"2.0","id":1514,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1514, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1515,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1515, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1516,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1516, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1517,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1517, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1518,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1518, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1519,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1519, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1519}}
Read message 
{"jsonrpc":"2.0","id":1520,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1520, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1521,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1521, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1522,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1522, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1523,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":16},"end":{"line":64,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1523, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1524,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1524, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1525,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1525, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1526,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1526, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1527,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":61,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1527, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1528,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":52,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1528, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1529,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.291347503662ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1529, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1530,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1530, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1531,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1531, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1532,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1532, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1533,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1533, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1534,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":53,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1534, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1533}}
Read message 
{"jsonrpc":"2.0","id":1535,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1535, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1536,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":52,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1536, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1536}}
Read message 
{"jsonrpc":"2.0","id":1537,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":50,"character":49}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1537, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1537}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":283},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1538,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.367879867554ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1538, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1539,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1539, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1540,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1540, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":283},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":283}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1541,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1541, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1542,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1542, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1543,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1543, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1544,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1544, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1545,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1545, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1546,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1546, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1547,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1547, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1548,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/improvisation_musicale.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1548, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1549,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1549, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1550,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1550, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1551,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1551, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1552,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1552, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1553,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1553, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1553}}
Read message 
{"jsonrpc":"2.0","id":1554,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1554, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1554}}
Read message 
{"jsonrpc":"2.0","id":1555,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1555, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1555}}
Read message 
{"jsonrpc":"2.0","id":1556,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1556, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1557,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1557, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1558,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1558, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1558}}
Read message 
{"jsonrpc":"2.0","id":1559,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1559, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1560,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1560, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1561,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1561, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":286},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet Note2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1562,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1562, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1563,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1563, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1564,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1564, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":287},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":288},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nuNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1565,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1565, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1566,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":6},"end":{"line":64,"character":6}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1566, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1567,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1567, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":289},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1568,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1568, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1569,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":7},"end":{"line":64,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1569, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1566}}
Read message 
{"jsonrpc":"2.0","id":1570,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1570, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1571,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1571, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":289},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2num nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":289}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1572,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1572, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1573,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1573, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1574,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1574, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1575,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":14},"end":{"line":64,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1575, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1576,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":15},"end":{"line":64,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1576, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":291},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2n nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1577,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1577, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1578,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1578, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1579,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1579, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":292},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2 nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1580,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1580, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1581,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":12},"end":{"line":64,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1581, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1582,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1582, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":293},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2n nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1583,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":13},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.380754470825ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1583, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1584,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1584, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1585,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1585, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1586,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1586, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":294},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2no nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":295},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1587,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1587, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1588,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1588, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1589,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":15},"end":{"line":64,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1589, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1590,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1590, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":295},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":295}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1591,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1591, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1592,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1592, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1593,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1593, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1594,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1594, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1595,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1595, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1596,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1596, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":296},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom# nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1597,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1597, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1598,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":16},"end":{"line":64,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1598, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1599,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1599, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":297},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":297},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":297}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1600,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":15},"end":{"line":64,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1600, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1598}}
Read message 
{"jsonrpc":"2.0","id":1601,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1601, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1602,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1602, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":297},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nom =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":297}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1603,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1603, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1604,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1604, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1605,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1605, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1606,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1606, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1605}}
Read message 
{"jsonrpc":"2.0","id":1607,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":16},"end":{"line":64,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1607, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":298},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom n =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1608,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1608, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1609,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":17},"end":{"line":64,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1609, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1610,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1610, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":299},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom nu =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1611,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1611, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1612,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":18},"end":{"line":64,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1612, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1609}}
Read message 
{"jsonrpc":"2.0","id":1613,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1613, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":300},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1611}}
Read message 
{"jsonrpc":"2.0","id":1614,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1614, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1615,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":19},"end":{"line":64,"character":19}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1615, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1612}}
Read message 
{"jsonrpc":"2.0","id":1616,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1616, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1617,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1617, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1618,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":18},"end":{"line":64,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1618, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":300},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match nom with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":300}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1619,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1619, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1620,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1620, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1621,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1621, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1622,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":12},"end":{"line":65,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1622, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1623,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1623, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1624,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1624, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":302},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match n with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1625,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1625, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1626,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":9},"end":{"line":65,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1626, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1627,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1627, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":303},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match nu with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1628,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1628, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1629,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1629, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1630,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":10},"end":{"line":65,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1630, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1631,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1631, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":304},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1632,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1632, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1633,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":11},"end":{"line":65,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1633, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1630}}
Read message 
{"jsonrpc":"2.0","id":1634,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.03664398193ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1634, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":304},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> \r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":304}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1635,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1635, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1636,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1636, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1637,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1637, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1638,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1638, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1639,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1639, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1640,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":65,"character":8},"end":{"line":65,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1640, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1641,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":54,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1641, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1642,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":55,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1642, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1643,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":55,"character":10}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1643, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1644,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":55,"character":11}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1644, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1645,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1645, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1646,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":55,"character":9},"end":{"line":55,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1646, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1647,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":55,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.223875045776ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1647, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1648,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":55,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1648, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1649,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":55,"character":10},"end":{"line":55,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1649, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1650,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":65,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1650, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":305},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> D\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1651,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":66,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1651, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1652,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1652, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1653,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":10},"end":{"line":66,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1653, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1654,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1654, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":306},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1655,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1655, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1656,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":66,"character":11},"end":{"line":66,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1656, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1653}}
Read message 
{"jsonrpc":"2.0","id":1657,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1657, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":306},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> \r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":306}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1658,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1658, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1659,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1659, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":307},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> D\r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1660,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":67,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1660, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":308},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1661,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1661, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1662,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1662, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1663,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":67,"character":11},"end":{"line":67,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1663, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":308},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":308}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1664,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1664, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1665,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1665, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1666,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1666, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1667,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":8},"end":{"line":68,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.369548797607ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1667, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":309},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 ->   \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1668,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1668, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1669,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1669, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":309},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 ->   \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":309}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1670,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1670, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1671,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1671, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":310},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 ->  R \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1672,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1672, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1673,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1673, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1674,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":11},"end":{"line":68,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1674, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1675,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1675, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":311},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 ->  Re \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1676,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1676, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1677,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1677, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1678,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":12},"end":{"line":68,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1678, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1674}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":311},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 ->  Re \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":311}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1679,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1679, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1680,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1680, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1681,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1681, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1682,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1682, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1682}}
Read message 
{"jsonrpc":"2.0","id":1683,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":10}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1683, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1684,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":10},"end":{"line":68,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1684, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":312},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1685,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1685, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1686,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":68,"character":9},"end":{"line":68,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1686, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1687,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1687, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1688,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":68,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1688, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1688}}
Read message 
{"jsonrpc":"2.0","id":1689,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1689, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":312},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> \r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":312}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1690,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1690, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1691,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1691, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":313},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> R\r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1692,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1692, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1693,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1693, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1694,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":10},"end":{"line":69,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1694, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1695,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1695, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":314},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1696,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1696, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1697,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":69,"character":11},"end":{"line":69,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1697, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1694}}
Read message 
{"jsonrpc":"2.0","id":1698,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1698, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1699,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":69,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1699, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1699}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":314},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> \r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":314}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1700,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1700, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1701,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1701, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1702,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1702, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":315},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> M\r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1703,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1703, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1704,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1704, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1705,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1705, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1706,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":10},"end":{"line":70,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1706, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":316},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1707,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1707, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1708,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":70,"character":11},"end":{"line":70,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1708, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1706}}
Read message 
{"jsonrpc":"2.0","id":1709,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1709, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1710,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":70,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1710, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":316},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> \r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":316}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1710}}
Read message 
{"jsonrpc":"2.0","id":1711,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1711, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1712,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1712, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1713,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1713, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1711}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":317},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> F\r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1714,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":71,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1714, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1715,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1715, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1716,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":10},"end":{"line":71,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1716, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1717,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1717, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":318},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1718,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1718, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1719,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":71,"character":11},"end":{"line":71,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1719, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1716}}
Read message 
{"jsonrpc":"2.0","id":1720,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1720, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":318},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> \r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":318}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1721,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1721, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1722,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1722, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":319},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> F\r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1723,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1723, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1724,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1724, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1725,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":10},"end":{"line":72,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1725, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1726,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1726, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":320},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1727,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1727, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1728,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":72,"character":11},"end":{"line":72,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1728, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1725}}
Read message 
{"jsonrpc":"2.0","id":1729,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1729, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1730,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1730, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1730}}
Read message 
{"jsonrpc":"2.0","id":1731,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1731, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":320},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":320}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1732,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1732, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1733,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1733, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1734,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1734, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1733}}
Read message 
{"jsonrpc":"2.0","id":1735,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1735, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1736,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":72,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1736, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1736}}
Read message 
{"jsonrpc":"2.0","id":1737,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1737, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1737}}
Read message 
{"jsonrpc":"2.0","id":1738,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1738, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1739,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.195264816284ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1739, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1740,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1740, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1741,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":8},"end":{"line":73,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1741, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":321},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 ->  \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1742,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1742, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1743,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1743, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":321},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 ->  \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":321}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1744,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1744, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1745,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.206470489502ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1745, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":322},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> S \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1746,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1746, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1747,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.996828079224ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1747, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1748,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1748, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1749,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":10},"end":{"line":73,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1749, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":324},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1750,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1750, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1751,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":73,"character":12},"end":{"line":73,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1751, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1749}}
Read message 
{"jsonrpc":"2.0","id":1752,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1752, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1753,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":73,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1753, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":324},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> \r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":324}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1753}}
Read message 
{"jsonrpc":"2.0","id":1754,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1754, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1755,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1755, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1756,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1756, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1757,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1757, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1757}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1758,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1758, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1758}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":325},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> S\r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1759,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1759, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1760,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1760, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1761,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":10},"end":{"line":74,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1761, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1762,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1762, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":327},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1763,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1763, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1764,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":12},"end":{"line":74,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1764, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1761}}
Read message 
{"jsonrpc":"2.0","id":1765,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1765, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":327},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> \r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":327}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1766,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1766, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1767,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1767, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1768,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1768, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1768}}
Read message 
{"jsonrpc":"2.0","id":1769,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1769, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1769}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":328},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> L\r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1770,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":75,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1770, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1771,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1771, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1772,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":10},"end":{"line":75,"character":10}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1772, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1773,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1773, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":329},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1774,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1774, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1775,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":75,"character":11},"end":{"line":75,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1775, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1772}}
Read message 
{"jsonrpc":"2.0","id":1776,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1776, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":329},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":329}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1777,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1777, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1778,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1778, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1779,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1779, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1780,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":77,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1780, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1780}}
Read message 
{"jsonrpc":"2.0","id":1781,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1781, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1782,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1782, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1783,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":9},"end":{"line":76,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1783, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":330},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 ->  \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1784,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1784, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1785,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1785, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":331},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> L \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1786,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1786, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":332},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1787,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1787, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1788,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":76,"character":12},"end":{"line":76,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1788, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1789,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1789, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":332},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> \r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":332}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1790,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":76,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1790, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1790}}
Read message 
{"jsonrpc":"2.0","id":1791,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1791, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1792,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1792, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1793,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":77,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1793, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":333},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> S\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1794,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":77,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1794, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":334},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1795,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1795, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1796,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":77,"character":12},"end":{"line":77,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1796, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1797,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1797, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":334},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":334}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1798,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1798, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1799,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1799, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1800,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":74,"character":12}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1800, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1801,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":74,"character":12},"end":{"line":74,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1801, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1802,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":44}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1802, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1803,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":88,"character":44},"end":{"line":88,"character":44}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1803, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":335},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1804,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1804, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1805,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1805, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":336},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  l\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1806,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":89,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1806, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":336},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  l\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":336}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":337},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  le\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":339},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1807,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1807, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1808,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1808, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":339},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":339}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1809,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1809, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1810,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1810, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":340},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let n\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1811,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":89,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1811, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1812,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1812, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1813,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":7},"end":{"line":89,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1813, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1814,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1814, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":341},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let no\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":342},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1815,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1815, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1816,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":9},"end":{"line":89,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1816, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1817,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1817, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":345},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1818,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1818, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1819,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1819, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":345},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":345}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1820,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1820, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1821,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.395059585571ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1821, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1822,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":63,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1822, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1822}}
Read message 
{"jsonrpc":"2.0","id":1823,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1823, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1824,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":64,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1824, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1825,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":64,"character":4},"end":{"line":64,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1825, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1826,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":85,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1826, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1826}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":346},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1827,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1827, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1828,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":23},"end":{"line":89,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1828, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1829,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1829, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":346},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":346}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1830,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1830, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1831,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1831, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":347},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1832,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1832, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1833,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1833, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":348},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom i\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1834,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":89,"character":25},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1834, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1835,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1835, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1836,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":25},"end":{"line":89,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1836, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1837,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1837, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":349},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1838,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1838, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1839,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":26},"end":{"line":89,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1839, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1836}}
Read message 
{"jsonrpc":"2.0","id":1840,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1840, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":350},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1838}}
Read message 
{"jsonrpc":"2.0","id":1841,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1841, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1839}}
Read message 
{"jsonrpc":"2.0","id":1842,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1842, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":351},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1841}}
Read message 
{"jsonrpc":"2.0","id":1843,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1843, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1844,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1844, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":352},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  m\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1845,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1845, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":352},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  m\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":352}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":353},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  ma\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":354},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  mat\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1846,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1846, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1847,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":5},"end":{"line":90,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1847, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1848,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1848, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":357},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  match \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1849,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1849, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1850,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1850, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":357},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  match \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":357}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1851,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1851, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1852,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1852, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":361},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  ma\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1853,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1853, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1854,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1854, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1855,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1855, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":362},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  m\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1856,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1856, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1857,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":3},"end":{"line":90,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.999927520752ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1857, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1854}}
Read message 
{"jsonrpc":"2.0","id":1858,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.99515914917ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1858, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":363},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1856}}
Read message 
{"jsonrpc":"2.0","id":1859,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1859, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1857}}
Read message 
{"jsonrpc":"2.0","id":1860,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1860, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":364},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  l\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1861,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1861, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":364},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  l\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":364}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":367},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1862,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1862, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1863,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1863, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":367},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":367}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1864,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1864, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1865,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1865, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1866,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":82,"character":12}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1866, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1867,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":46,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1867, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":368},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let a\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1868,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1868, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":369},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let al\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1869,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1869, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1870,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1870, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1871,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1871, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":371},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alte\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":372},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1872,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1872, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1873,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":11},"end":{"line":90,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1873, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1874,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1874, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":372},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":372}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":375},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1875,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1875, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1876,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1876, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":375},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":375}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1877,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1877, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1878,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1878, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":376},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = i\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1879,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1879, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":377},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":378},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if()\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1880,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":17}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1880, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1881,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1881, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1882,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":17},"end":{"line":90,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1882, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1883,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1883, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":378},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if()\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":378}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":379},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1884,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1884, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1885,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":16},"end":{"line":90,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1885, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1886,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1886, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":380},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1884}}
Read message 
{"jsonrpc":"2.0","id":1887,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1887, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1885}}
Read message 
{"jsonrpc":"2.0","id":1888,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1888, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":380},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":380}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1889,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1889, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1890,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1890, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1891,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1891, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1892,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1892, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1893,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":88,"character":6},"end":{"line":88,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1893, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1894,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1894, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1895,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1895, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1895}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":381},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1896,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1896, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1897,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":24},"end":{"line":90,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1897, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1898,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1898, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":381},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":381}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1899,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1899, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1900,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1900, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":382},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1901,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1901, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1902,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":25},"end":{"line":90,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1902, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1903,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1903, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":382},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":382}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1904,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1904, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1905,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1905, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1906,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1906, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":383},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1907,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1907, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1908,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":26},"end":{"line":90,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1908, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1909,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1909, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":383},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":383}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1910,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1910, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1910}}
Read message 
{"jsonrpc":"2.0","id":1911,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1911, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1912,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1912, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":384},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1913,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1913, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1914,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1914, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":384},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":384}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1915,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1915, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1916,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1916, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":385},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 |\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1917,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1917, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1918,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":28},"end":{"line":90,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1918, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1919,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1919, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":385},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 |\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":385}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1920,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1920, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1921,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1921, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1922,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1922, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":386},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1923,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1923, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1924,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":29},"end":{"line":90,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1924, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1925,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1925, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":386},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":386}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1926,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1926, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1927,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1927, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1928,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":16},"end":{"line":90,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1928, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1929,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":17},"end":{"line":90,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1929, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1930,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1930, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1931,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":17}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1931, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1932,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1932, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1933,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":29},"end":{"line":90,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1933, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":387},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":388},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1934,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1934, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1935,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":42},"end":{"line":90,"character":42}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1935, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1936,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1936, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":389},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":389}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":390},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1937,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1937, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1938,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":55},"end":{"line":90,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1938, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1939,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1939, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":390},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":390}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1940,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1940, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1941,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1941, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":391},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1942,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1942, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1943,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1943, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":392},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1942}}
Read message 
{"jsonrpc":"2.0","id":1944,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1944, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1945,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":68},"end":{"line":90,"character":68}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1945, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1946,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1946, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":393},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1944}}
Read message 
{"jsonrpc":"2.0","id":1947,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1947, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1945}}
Read message 
{"jsonrpc":"2.0","id":1948,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 1.00493431091ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1948, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":394},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1947}}
Read message 
{"jsonrpc":"2.0","id":1949,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1949, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1950,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":81},"end":{"line":90,"character":81}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1950, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1951,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1951, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":394},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 ||\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":394}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1952,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1952, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1953,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1953, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":396},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 \r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1954,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1954, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1955,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1955, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":397},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 t\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1956,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":80},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1956, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":399},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 the\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1957,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1957, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1958,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":82},"end":{"line":90,"character":82}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1958, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1959,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1959, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":400},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1957}}
Read message 
{"jsonrpc":"2.0","id":1960,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1960, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1961,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":83},"end":{"line":90,"character":83}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1961, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1958}}
Read message 
{"jsonrpc":"2.0","id":1962,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1962, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":400},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=1 || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":400}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1963,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1963, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1964,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1964, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1965,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":92,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1965, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1965}}
Read message 
{"jsonrpc":"2.0","id":1966,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1966, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1967,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":27},"end":{"line":90,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1967, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1968,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1968, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1968}}
Read message 
{"jsonrpc":"2.0","id":1969,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":38}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1969, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1970,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1970, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1971,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":39},"end":{"line":90,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1971, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":401},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote= || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1972,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1972, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1973,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":38},"end":{"line":90,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1973, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1974,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1974, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":401},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote= || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":401}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1975,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1975, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1976,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1976, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":402},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1977,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1977, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1978,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":39},"end":{"line":90,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1978, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1979,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1979, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":402},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=1 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":402}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1980,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1980, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1981,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1981, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1982,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":52}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 1.00159645081ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1982, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1983,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":52},"end":{"line":90,"character":52}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1983, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":403},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote= || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1984,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1984, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1985,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":51},"end":{"line":90,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1985, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1986,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.361680984497ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1986, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":403},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote= || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":403}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1987,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1987, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1988,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1988, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":404},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1989,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1989, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1990,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":52},"end":{"line":90,"character":52}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1990, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1991,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1991, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":404},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=1 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":404}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1992,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1992, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":1993,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1993, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1994,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":53},"end":{"line":90,"character":53}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1994, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1995,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":56}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1995, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1996,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":64}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1996, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1997,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":65},"end":{"line":90,"character":65}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1997, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":405},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote= || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1998,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1998, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":1999,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":64},"end":{"line":90,"character":64}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1999, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2000,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2000, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":406},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2001,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2001, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2002,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":65},"end":{"line":90,"character":65}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2002, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2003,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2003, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2004,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":66},"end":{"line":90,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2004, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2002}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":406},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=1 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":406}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2005,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2005, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2006,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2006, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2007,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2007, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2008,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":70},"end":{"line":90,"character":70}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2008, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2009,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":77}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2009, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2010,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":77},"end":{"line":90,"character":77}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2010, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2011,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":78},"end":{"line":90,"character":78}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2011, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":407},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2012,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2012, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2013,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":79},"end":{"line":90,"character":79}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2013, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2014,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2014, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":407},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n  \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":407}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2015,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2015, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2016,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2016, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":408},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2017,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2017, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2018,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2018, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":408},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":408}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2019,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2019, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2020,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2020, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2021,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":50,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2021, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2021}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":409},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    D\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2022,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2022, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":411},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Die\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2023,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2023, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2024,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":7},"end":{"line":91,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2024, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2025,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2025, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":411},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Die\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":411}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":412},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2026,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2026, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2027,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":9},"end":{"line":91,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2027, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2028,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2028, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":413},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2026}}
Read message 
{"jsonrpc":"2.0","id":2029,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2029, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2027}}
Read message 
{"jsonrpc":"2.0","id":2030,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2030, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":413},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    \r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":413}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":414},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    e\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2031,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":92,"character":5},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2031, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":416},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    els\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":417},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    else\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2032,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2032, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2033,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":92,"character":8},"end":{"line":92,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2033, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2034,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2034, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":417},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n    Diese\r\n    else\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":417}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2035,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2035, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2036,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2036, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2037,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2037, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2038,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":92,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2038, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2039,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":92,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2039, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2039}}
Read message 
{"jsonrpc":"2.0","id":2040,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":0},"end":{"line":92,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2040, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":418},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2041,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2041, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2042,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2042, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":418},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":418}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2043,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2043, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2044,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2044, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2045,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":84}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2045, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2046,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":84},"end":{"line":90,"character":84}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2046, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":420},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then     Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2047,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2047, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2048,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2048, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":420},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then     Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":420}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2049,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2049, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2050,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2050, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":422},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then   Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2051,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2051, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2052,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2052, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":423},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then  Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2051}}
Read message 
{"jsonrpc":"2.0","id":2053,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2053, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2054,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2054, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":424},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":424}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2055,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":84},"end":{"line":90,"character":84}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2055, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2056,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2056, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2057,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2057, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2058,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":85}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2058, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2059,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":85},"end":{"line":90,"character":85}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2059, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":424},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese\r\n    else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":424}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2060,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2060, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2061,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2061, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2062,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2062, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2063,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":8},"end":{"line":91,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2063, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2064,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":4},"end":{"line":91,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2064, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":426},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese\r\nelse\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2065,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2065, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2066,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":0},"end":{"line":91,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2066, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2067,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2067, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":427},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Dieseelse\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2068,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2068, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2069,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":90},"end":{"line":90,"character":90}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2069, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2066}}
Read message 
{"jsonrpc":"2.0","id":2070,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2070, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":428},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2068}}
Read message 
{"jsonrpc":"2.0","id":2071,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2071, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2072,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":91},"end":{"line":90,"character":91}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2072, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2069}}
Read message 
{"jsonrpc":"2.0","id":2073,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2073, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2074,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":92}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2074, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2075,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":94},"end":{"line":90,"character":94}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2075, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2072}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":428},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":428}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2076,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":95},"end":{"line":90,"character":95}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2076, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2075}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":429},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2077,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2077, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2076}}
Read message 
{"jsonrpc":"2.0","id":2078,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2078, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":429},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":429}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2079,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2079, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2080,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2080, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2081,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":44,"character":41}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2081, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2081}}
Read message 
{"jsonrpc":"2.0","id":2082,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":46,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2082, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2083,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":48,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2083, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2083}}
Read message 
{"jsonrpc":"2.0","id":2084,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":47,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2084, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2085,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":47,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2085, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2084}}
Read message 
{"jsonrpc":"2.0","id":2086,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":47,"character":6},"end":{"line":47,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2086, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2087,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":27},"end":{"line":90,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2087, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2088,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":28},"end":{"line":90,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2088, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2089,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":96}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2089, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":430},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2090,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2090, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2091,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":103},"end":{"line":90,"character":103}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2091, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2092,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2092, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":431},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre\r\n  \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2090}}
Read message 
{"jsonrpc":"2.0","id":2093,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2093, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2091}}
Read message 
{"jsonrpc":"2.0","id":2094,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2094, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":432},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre\r\n\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2093}}
Read message 
{"jsonrpc":"2.0","id":2095,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2095, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2096,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2096, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":433},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2095}}
Read message 
{"jsonrpc":"2.0","id":2097,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2097, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2098,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":103},"end":{"line":90,"character":103}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2098, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2099,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2099, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":434},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":435},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre i\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2100,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":105},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2100, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":436},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2101,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2101, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":106},"end":{"line":90,"character":106}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2102, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2103, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2101}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":437},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre int\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2104,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2104, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":107},"end":{"line":90,"character":107}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2105, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2102}}
Read message 
{"jsonrpc":"2.0","id":2106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2106, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":439},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2104}}
Read message 
{"jsonrpc":"2.0","id":2107,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2107, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2105}}
Read message 
{"jsonrpc":"2.0","id":2108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2108, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":439},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  \r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":439}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2109,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2109, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2110, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2111,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":121,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2111, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2111}}
Read message 
{"jsonrpc":"2.0","id":2112,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2112, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2113, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2113}}
Read message 
{"jsonrpc":"2.0","id":2114,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2114, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2115, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2116, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":118,"character":8},"end":{"line":119,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2117, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":119,"character":13},"end":{"line":119,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2118, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2119,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":13}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2119, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2120,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":119,"character":13}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2120, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":440},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory Do Becarre 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2121, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":28},"end":{"line":91,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2122, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2123, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":440},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory Do Becarre 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":440}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2124,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2124, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2125, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2126, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2126}}
Read message 
{"jsonrpc":"2.0","id":2127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2127, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2128,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":88,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2128, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2129,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":88,"character":6},"end":{"line":88,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2129, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":14}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2130, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2130}}
Read message 
{"jsonrpc":"2.0","id":2131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2131, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2131}}
Read message 
{"jsonrpc":"2.0","id":2132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2132, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2133,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":89,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2133, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2134,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":89,"character":6},"end":{"line":89,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2134, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2135, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2136, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2137, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2138,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":16}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2138, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":15},"end":{"line":91,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2139, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":441},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom Becarre 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2140,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2140, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":18},"end":{"line":91,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2141, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2142,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2142, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.993490219116ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2143, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2143}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":441},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom Becarre 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":441}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2144,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":7}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2144, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2145,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":7}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2145, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2144}}
Read message 
{"jsonrpc":"2.0","id":2146,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2146, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2147, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":6},"end":{"line":90,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2148, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2149,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2149, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":21}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2150, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2151,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":21}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2151, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":19},"end":{"line":91,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2152, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":442},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2153,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2153, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2154,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":24},"end":{"line":91,"character":24}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2154, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2155, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":442},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter 4;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":442}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":9}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2156, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2157,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":90,"character":9}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2157, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2156}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2158,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2158, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2159, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":90,"character":6},"end":{"line":90,"character":11}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2160, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":26}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2161, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2162,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":26}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2162, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":26},"end":{"line":91,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2163, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":443},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter ;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2164,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2164, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":25},"end":{"line":91,"character":25}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2165, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2166, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":444},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter o;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2167,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":26},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2167, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2168,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2168, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":26},"end":{"line":91,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2169, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2170, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":445},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter oc;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2171,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2171, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":27},"end":{"line":91,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2172, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2169}}
Read message 
{"jsonrpc":"2.0","id":2173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2173, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":446},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter oct;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2171}}
Read message 
{"jsonrpc":"2.0","id":2174,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2174, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":28},"end":{"line":91,"character":28}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2175, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2172}}
Read message 
{"jsonrpc":"2.0","id":2176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2176, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":447},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octa;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2174}}
Read message 
{"jsonrpc":"2.0","id":2177,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2177, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":29},"end":{"line":91,"character":29}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2178, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2175}}
Read message 
{"jsonrpc":"2.0","id":2179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2179, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":448},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octav;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":449},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octave;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2180,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2180, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":31},"end":{"line":91,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2181, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2182, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":449},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octave;\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":449}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2183,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2183, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.299215316772ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2184, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2185,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":91,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2185, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":32},"end":{"line":91,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2186, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":450},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octave\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2187,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2187, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":31},"end":{"line":91,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2188, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2189,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2189, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":450},"contentChanges":[{"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet nomNote2num nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet numNote2nom num =\r\n  match num with \r\n  | 0 -> Do\r\n  | 1 -> Do\r\n  | 2 -> Re \r\n  | 3 -> Re\r\n  | 4 -> Mi\r\n  | 5 -> Fa\r\n  | 6 -> Fa\r\n  | 7 -> Sol \r\n  | 8 -> Sol\r\n  | 9 -> La\r\n  | 10 -> La \r\n  | 11 -> Si\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = nomNote2num note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Retour la note d'une valeur MIDI *)\r\nlet midi2note midi = \r\n  let octave = (midi - 24) / 12 in\r\n  let numNote = midi - (24 + octave * 12) in\r\n  let nom = numNote2nom in \r\n  let alter = if numNote=1 || numNote=3 || numNote=6 || numNote=8 || numNote=10 then Diese else Becarre in\r\n  note_factory nom alter octave\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","version":450}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2190,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2190, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2191,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2191, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":94,"character":40}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2192, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2193, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2194,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2194, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2195,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2195, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":20}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2196, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2196}}
Read message 
{"jsonrpc":"2.0","id":2197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2197, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2198, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2199,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2199, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2200, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":91,"character":31},"end":{"line":91,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2201, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2202,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":85,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2202, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2202}}
Read message 
{"jsonrpc":"2.0","id":2203,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":86,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2203, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2204,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"position":{"line":86,"character":8}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2204, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2203}}
Read message 
{"jsonrpc":"2.0","id":2205,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":86,"character":4},"end":{"line":86,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2205, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2206, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2207,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2207, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2208,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2208, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":209},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2209, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2210, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2211, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":209},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":209}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2212,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2212, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2213, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2214,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2214, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2215,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2215, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2216,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":44}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2216, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2217,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":45}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2217, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2218,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":45}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2218, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2219,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":24},"end":{"line":36,"character":45}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2219, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2220,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":24}}}
[server] Got a method textDocument/definition
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2220, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2221, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2222,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2222, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2223, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":210},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2notenoteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2224,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2224, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2225,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":36},"end":{"line":37,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2225, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2226, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":210},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2notenoteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":210}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2227,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2227, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2228,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2228, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2229,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2229, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2230,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":15}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2230, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2231,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":15},"end":{"line":37,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2231, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":211},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note noteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2232,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2232, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2233,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2233, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2234,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2234, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":211},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note noteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":211}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":212},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note (noteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2235,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":17}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2235, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2236,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":18}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2236, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2237,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2237, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2238, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2239,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":18}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2239, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2240,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2240, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2241,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2241, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":212},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note (noteMidi + intervalle\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":212}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2242,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2242, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2243, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2244,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":35},"end":{"line":37,"character":35}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2244, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2245,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":38},"end":{"line":37,"character":38}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2245, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":213},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note (noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2246,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2246, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":37,"character":39},"end":{"line":37,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2247, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2248, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2249,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":37,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2249, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":213},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      let newnoteMidi = noteMidi + intervalle in\r\n      midi2note (noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":213}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2250,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2250, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2251,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2251, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2252,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":44}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2252, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2252}}
Read message 
{"jsonrpc":"2.0","id":2253,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":47}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2253, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2253}}
Read message 
{"jsonrpc":"2.0","id":2254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":48}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2254, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2255,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":48}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2255, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2256,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":48},"end":{"line":36,"character":48}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2256, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2257,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":39},"end":{"line":36,"character":48}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2257, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2258,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":39}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2258, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":214},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2259,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":39},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2259, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2260,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2260, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":39},"end":{"line":35,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2261, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2262,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2262, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":214},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":214}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2263,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2263, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2264, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2265,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2265, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2265}}
Read message 
{"jsonrpc":"2.0","id":2266,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":31}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2266, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2266}}
Read message 
{"jsonrpc":"2.0","id":2267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2267, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2267}}
Read message 
{"jsonrpc":"2.0","id":2268,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":28}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2268, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2269,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":28}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2269, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2270,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":22},"end":{"line":35,"character":31}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2270, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2271,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":22}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2271, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2272,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":19}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2272, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2272}}
Read message 
{"jsonrpc":"2.0","id":2273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":18}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2273, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2273}}
Read message 
{"jsonrpc":"2.0","id":2274,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2274, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2275,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2275, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2276,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2276, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2277,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2277, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2278,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2278, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2279,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2279, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2280,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2280, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2281,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2281, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2282,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":17},"end":{"line":36,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2282, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2283,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/definition
[server] processing took 0.401496887207ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2283, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":215},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (note2midinoteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2284,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2284, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":26},"end":{"line":36,"character":26}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2285, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2286,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2286, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":215},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (note2midinoteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":215}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2287,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2287, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2288,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2288, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":216},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (note2midi noteMidi + intervalle)\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2289,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2289, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":27},"end":{"line":36,"character":27}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2290, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2291,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2291, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":216},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note (note2midi noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":216}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2292,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 1.00493431091ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2292, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2293,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2293, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2294,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2294, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2294}}
Read message 
{"jsonrpc":"2.0","id":2295,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2295, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2296,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2296, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2297,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":16}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2297, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":217},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2298,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":17}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2298, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2299,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2299, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2300,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":17},"end":{"line":36,"character":17}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2300, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2301,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2301, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":217},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi noteMidi + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":217}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2302,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2302, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2303,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2303, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2304,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":36}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2304, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2305,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":35}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2305, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2306,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":36}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2306, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2307,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":36},"end":{"line":36,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2307, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":218},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi noteMidi) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2308,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2308, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2309,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":37},"end":{"line":36,"character":37}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2309, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2310, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":218},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi noteMidi) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":218}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2311,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2311, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2312,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2312, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2313,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":50}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2313, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2313}}
Read message 
{"jsonrpc":"2.0","id":2314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":51},"end":{"line":36,"character":51}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2314, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2315,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2315, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2315}}
Read message 
{"jsonrpc":"2.0","id":2316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":32}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2316, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2317,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":33}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2317, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2318,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":28},"end":{"line":36,"character":36}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2318, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":219},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi n) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2319,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":29},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2319, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":220},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi no) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2320,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2320, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":30},"end":{"line":36,"character":30}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2321, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2322,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2322, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":222},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2320}}
Read message 
{"jsonrpc":"2.0","id":2323,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2323, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2324,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":36,"character":32},"end":{"line":36,"character":32}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2324, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2321}}
Read message 
{"jsonrpc":"2.0","id":2325,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2325, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":222},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      let noteMidi =  note2midi note in\r\n      midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":222}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2326,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2326, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2327,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2327, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2328,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":43}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2328, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2328}}
Read message 
{"jsonrpc":"2.0","id":2329,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":39}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2329, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2330,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":35,"character":39},"end":{"line":35,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2330, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2331,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":15},"end":{"line":35,"character":39}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2331, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2332,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2332, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":223},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2333,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2333, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2334,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2334, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2335,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2335, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":223},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n      midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":223}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2336,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":36,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2336, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2336}}
Read message 
{"jsonrpc":"2.0","id":2337,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2337, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2338,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2338, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2339,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2339, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2340,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2340, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2341,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":6}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2341, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2342,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2342, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2343,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":16}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2343, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2344,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2344, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2345,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":35,"character":5}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2345, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":224},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n     midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2346,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2346, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2347,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2347, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":226},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note ->\r\n midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2348,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2348, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2349,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2349, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":227},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2348}}
Read message 
{"jsonrpc":"2.0","id":2350,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2350, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2351,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2351, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2352,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2352, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":227},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n    fun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":227}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2353,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2353, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2354,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2354, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2355,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":4}}}
[server] Got a method textDocument/hover
[server] processing took 0.996828079224ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2355, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2356,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":4}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2356, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2357,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2357, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":228},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\n  fun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2358,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2358, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2359,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2359, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2360,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2360, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":229},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (\r\nfun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2361,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2361, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2362,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2362, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2363,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2363, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":230},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2364,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2364, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2365,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":12},"end":{"line":33,"character":12}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2365, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2366,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2366, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":230},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun note -> midi2note ((note2midi note) + intervalle)\r\n  ) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":230}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2367,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2367, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2368,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2368, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2369,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":34,"character":2}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2369, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2370,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2370, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":231},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun note -> midi2note ((note2midi note) + intervalle)\r\n) score"}]}}
Read message 
{"jsonrpc":"2.0","id":2371,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2371, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2372,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2372, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2373,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2373, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":232},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun note -> midi2note ((note2midi note) + intervalle)) score"}]}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2371}}
Read message 
{"jsonrpc":"2.0","id":2374,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2374, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":65},"end":{"line":33,"character":65}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2375, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2372}}
Read message 
{"jsonrpc":"2.0","id":2376,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2376, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":232},"contentChanges":[{"text":"open Types\r\n\r\n(* Play the note *)\r\nlet play_note duration note =\r\n  Graphics.sound (note2freq note) duration\r\n\r\n(* Convert MIDI list to Frequency list *)\r\nlet midi_to_freq_score midi_score =\r\n  let rec aux acc l =\r\n    match l with\r\n    | element_1::sub_list -> \r\n      let acc = aux acc sub_list in\r\n      let x = midi2freq element_1 in\r\n      x::acc\r\n    | _ -> []\r\n  in aux [] midi_score\r\n\r\n(* MIDI to Note *)\r\nlet play_midi duration midi_val =\r\n  begin\r\n  Graphics.sound (midi2freq midi_val) duration;\r\n  end\r\n\r\n(* Play a score MIDI - Exercise 2.3 *)\r\nlet play_score_midi score =\r\n  List.iter (play_midi 250) score\r\n\r\n(* Play a score *)\r\nlet play_score score =\r\n  List.iter (play_note 1000) score\r\n\r\n(* transpose *)\r\nlet transpose score intervalle = \r\n  List.map (fun note -> midi2note ((note2midi note) + intervalle)) score"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml","version":232}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2377,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2377, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":2378,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2378, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Read message 
{"jsonrpc":"2.0","id":2379,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":72}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2379, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":72},"end":{"line":33,"character":72}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2380, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2381,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":65}}}
[server] Got a method textDocument/hover
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2381, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2382,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":66},"end":{"line":33,"character":66}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2382, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2383,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"position":{"line":33,"character":72}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2383, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2384,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/functions.ml"},"range":{"start":{"line":33,"character":72},"end":{"line":33,"character":72}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2384, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}

Hello - from c:\Users\Lixfe\.vscode\extensions\jaredly.reason-vscode-1.5.2\bin.native.exe.hot.exe
Previous log location: C:\Users\Lixfe\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml","languageId":"ocaml","version":1,"text":"(* ---- Les Types BEGIN ---- *)\r\ntype note_name =\r\n    Do\r\n  | Re\r\n  | Mi\r\n  | Fa\r\n  | Sol\r\n  | La\r\n  | Si\r\n\r\ntype alteration =\r\n    Becarre\r\n  | Diese\r\n\r\ntype note = {\r\n  nom: note_name;\r\n  alteration: alteration;\r\n  octave: int;\r\n}\r\ntype score =  note list\r\n(* ---- Les Types END ---- *)\r\n\r\n(*---------------------*)\r\n(* Les Fonctions BEGIN *)\r\n(*---------------------*)\r\n\r\n(* Cré une note en verifiant que la note existe (à compléter/modifier -> je suis pas sure !) *)\r\nlet note_factory nom alter octave = \r\n  if ((nom = Mi) && (alter = Diese))  || ((nom = Si) && (alter = Diese)) then\r\n    { nom = nom; alteration = Becarre; octave = octave; } \r\n  else\r\n    { nom = nom; alteration = alter; octave = octave; } \r\n\r\n(* converti le nom de la note en String *)\r\nlet noteName_to_string noteName = \r\n  match noteName with\r\n  | Do -> \"Do\"\r\n  | Re -> \"Re\"\r\n  | Mi -> \"Mi\"\r\n  | Fa -> \"Fa\"\r\n  | Sol -> \"Sol\"\r\n  | La -> \"La\"\r\n  | Si -> \"Si\"\r\n\r\n(* Affiche la note avec ses parametres *)\r\nlet print_Note_simple note = \r\n  let (alter:string) = match note.alteration with\r\n    | Becarre -> \"\"\r\n    | Diese -> \"#\"\r\n  in\r\n  Printf.printf \"%s%d%s\" ((noteName_to_string note.nom):string) ((note.octave):int) (alter:string)\r\n\r\n(* Retourne la position de la note sans prendre en compte l'alternation *)\r\nlet num_Note_nom nom =\r\n  match nom with \r\n  | Do -> 0\r\n  | Re -> 2\r\n  | Mi -> 4\r\n  | Fa -> 5\r\n  | Sol -> 7\r\n  | La -> 9\r\n  | Si -> 11\r\n\r\n(* Retourne la hauteur MIDI de la note *) \r\nlet note2midi note = \r\n  let numNom = num_Note_nom note.nom in\r\n  let numNomPlusAlter = if note.alteration = Diese then numNom + 1 else numNom in (* +1 si Diese *)\r\n  (24 + 12*(note.octave)) + numNomPlusAlter\r\n\r\n(* Calcul de la fréquence grâce à la hauteur MIDI *)\r\nlet midi2freq midi = int_of_float (440. *. (2. ** ((float_of_int (midi-69)) /. 12.)))\r\n(* Retourne la fréquence de la note *)\r\nlet note2freq note = midi2freq (note2midi note)\r\n(* Affichage de la note avec sa valeur MIDI et sa fréquence *)\r\nlet print_Note note = \r\n  let _ = print_Note_simple note in\r\n  Printf.printf \" --> MIDI = %d , fréquence = %d \\n\" (note2midi note) (note2freq note)\r\n\r\n(* Affiche score/partition *)\r\nlet print_Score  partition = \r\n  let _ = Printf.printf \"\\n\"in\r\n  List.iter (fun x ->\r\n    begin\r\n      print_Note_simple x;\r\n      Printf.printf \"\\n\";\r\n    end\r\n  ) partition\r\n\r\n(* Joue la note ! *)\r\n(*let play_note note =\r\n  begin\r\n    Graphics.open_graph \" 400x600\";\r\n    Graphics.sound 440 1000;\r\n    Graphics.set_window_title \"Hello\";\r\n    Graphics.read_key ();\r\n  end\r\n*)\r\n\r\n(*-------------------*)\r\n(* Les Fonctions END *)\r\n(*-------------------*)\r\n\r\nlet _ = \r\n  let do_4 = note_factory Do Becarre 4;\r\n  and do_4_diese = note_factory Do Diese 4;\r\n  and la_2 = note_factory La Becarre 2;\r\n  and la_3 = note_factory La Becarre 3;\r\n  and la_4 = note_factory La Becarre 4;\r\n  and mi_3 = note_factory Mi Becarre 3\r\n  in \r\n  let _ =\r\n    begin\r\n      print_Note do_4 ; \r\n      print_Note do_4_diese;\r\n      print_Note la_2 ; \r\n      print_Note la_3;\r\n      print_Note la_4 ; \r\n      print_Note mi_3; \r\n    end\r\n  in\r\n  let my_score = [do_4;do_4_diese;la_2;la_3;la_4;mi_3]  in\r\n  let () = print_Score my_score in\r\n  (*let _ = play_note do_4 in*)\r\n  ()\r\n"}}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"},"range":{"start":{"line":99,"character":23},"end":{"line":99,"character":23}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 2, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Couldn't get opam switch prefix", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/git/improvisation_musicale/src/types.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.ms
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Couldn't get opam switch prefix"}}
Found a `dune` file at D:\git\improvisation_musicale\src
]] Making a new jbuilder package at D:\git\improvisation_musicale\src
=== Project root: D:\git\improvisation_musicale
